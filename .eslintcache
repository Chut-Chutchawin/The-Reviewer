[{"/Users/chutchawin/Desktop/Project/web-app/src/index.js":"1","/Users/chutchawin/Desktop/Project/web-app/src/App.js":"2","/Users/chutchawin/Desktop/Project/web-app/src/reportWebVitals.js":"3","/Users/chutchawin/Desktop/Project/web-app/src/components/NavBar.js":"4","/Users/chutchawin/Desktop/Project/web-app/src/components/Trending.js":"5","/Users/chutchawin/Desktop/Project/web-app/src/components/PopularMovies.js":"6","/Users/chutchawin/Desktop/Project/web-app/src/components/TopRatedMovies.js":"7","/Users/chutchawin/Desktop/Project/web-app/src/components/UpcomingMovies.js":"8","/Users/chutchawin/Desktop/Project/web-app/src/components/Footer.js":"9","/Users/chutchawin/Desktop/Project/web-app/src/pages/Home.js":"10","/Users/chutchawin/Desktop/Project/web-app/src/pages/PosterInfo.js":"11","/Users/chutchawin/Desktop/Project/web-app/src/pages/Results.js":"12"},{"size":564,"mtime":1613025050950,"results":"13","hashOfConfig":"14"},{"size":570,"mtime":1613555772507,"results":"15","hashOfConfig":"14"},{"size":362,"mtime":1611209637724,"results":"16","hashOfConfig":"14"},{"size":3636,"mtime":1615181847302,"results":"17","hashOfConfig":"14"},{"size":2243,"mtime":1611973579676,"results":"18","hashOfConfig":"14"},{"size":2509,"mtime":1613200790170,"results":"19","hashOfConfig":"14"},{"size":2542,"mtime":1613200808734,"results":"20","hashOfConfig":"14"},{"size":3084,"mtime":1613617965834,"results":"21","hashOfConfig":"14"},{"size":623,"mtime":1612059476625,"results":"22","hashOfConfig":"14"},{"size":528,"mtime":1613200648780,"results":"23","hashOfConfig":"14"},{"size":11846,"mtime":1615552498008,"results":"24","hashOfConfig":"14"},{"size":3040,"mtime":1615555981221,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"z1blmm",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"28"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"28"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"28"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/chutchawin/Desktop/Project/web-app/src/index.js",[],["55","56"],"/Users/chutchawin/Desktop/Project/web-app/src/App.js",[],"/Users/chutchawin/Desktop/Project/web-app/src/reportWebVitals.js",[],"/Users/chutchawin/Desktop/Project/web-app/src/components/NavBar.js",["57"],"import {\n  AppBar,\n  Button,\n  InputBase,\n  makeStyles,\n  Toolbar,\n  Typography,\n  Box,\n  fade,\n} from \"@material-ui/core\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport React from \"react\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport Results from '../pages/Results'\n\nconst useStyles = makeStyles((theme) => ({\n  brand: {\n    display: \"inline\",\n    fontWeight: 900,\n  },\n  link: {\n    textDecoration: \"none\",\n    color: \"white\",\n  },\n  moviesButton: {\n    marginLeft: 20,\n    fontWeight: 900,\n  },\n  tvShowsButton: {\n    marginLeft: 20,\n    fontWeight: 900,\n  },\n  loginButton: {\n    marginLeft: 20,\n    fontWeight: 900,\n  },\n  joinUsButton: {\n    marginLeft: 20,\n    fontWeight: 900,\n  },\n  search: {\n    position: \"relative\",\n    borderRadius: theme.shape.borderRadius,\n    backgroundColor: fade(theme.palette.common.white, 0.15),\n    \"&:hover\": {\n      backgroundColor: fade(theme.palette.common.white, 0.25),\n    },\n    marginLeft: 0,\n    width: \"100%\",\n    [theme.breakpoints.up(\"sm\")]: {\n      marginLeft: theme.spacing(1),\n      width: \"auto\",\n    },\n  },\n  searchIcon: {\n    padding: theme.spacing(0, 2),\n    height: \"100%\",\n    position: \"absolute\",\n    pointerEvents: \"none\",\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n  inputRoot: {\n    color: \"inherit\",\n  },\n  inputInput: {\n    padding: theme.spacing(1, 1, 1, 0),\n    // vertical padding + font size from searchIcon\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\n    transition: theme.transitions.create(\"width\"),\n    width: \"100%\",\n    [theme.breakpoints.up(\"sm\")]: {\n      width: \"12ch\",\n      \"&:focus\": {\n        width: \"20ch\",\n      },\n    },\n  },\n}));\n\nexport default function NavBar() {\n  const classes = useStyles();\n  const history = useHistory()\n\n  const handleKeyDown = (event) => {\n    console.log(event.target.value)\n    if (event.key === \"Enter\") {\n      history.push({pathname: '/results', state: {search: event.target.value}})\n      window.location.reload()\n    }\n  };\n  return (\n    <div>\n      <AppBar>\n        <Toolbar>\n          <Box flex={1} paddingX={30}>\n            <Link\n              className={classes.link}\n              to={{\n                pathname: `/`,\n              }}\n            >\n              <Typography className={classes.brand} variant=\"h5\">\n                The Reviewer\n              </Typography>\n            </Link>\n            <Button className={classes.moviesButton} color=\"inherit\">\n              Movies\n            </Button>\n            <Button className={classes.tvShowsButton} color=\"inherit\">\n              TV Shows\n            </Button>\n            <Box component=\"span\" position=\"absolute\" right={446.78}>\n              <div className={classes.search}>\n                <div className={classes.searchIcon}>\n                  <SearchIcon color=\"secondary\" />\n                </div>\n                <InputBase\n                  placeholder=\"Searchâ€¦\"\n                  classes={{\n                    root: classes.inputRoot,\n                    input: classes.inputInput,\n                  }}\n                  inputProps={{ \"aria-label\": \"search\" }}\n                  onKeyDown={handleKeyDown}\n                />\n              </div>\n            </Box>\n            <Box component=\"span\" position=\"absolute\" right={264}>\n              <Button className={classes.loginButton} color=\"inherit\">\n                Login\n              </Button>\n              <Button className={classes.joinUsButton} color=\"inherit\">\n                Join us\n              </Button>\n            </Box>\n          </Box>\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n}\n\n","/Users/chutchawin/Desktop/Project/web-app/src/components/Trending.js",[],"/Users/chutchawin/Desktop/Project/web-app/src/components/PopularMovies.js",[],"/Users/chutchawin/Desktop/Project/web-app/src/components/TopRatedMovies.js",[],["58","59"],"/Users/chutchawin/Desktop/Project/web-app/src/components/UpcomingMovies.js",["60"],"import {\n  Box,\n  Typography,\n  Card,\n  CardActionArea,\n  Grid,\n  CardContent,\n} from \"@material-ui/core\";\nimport React, { useEffect, useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport axios from \"axios\";\nimport { Link } from \"react-router-dom\";\n\nconst useStyles = makeStyles({\n  root: {\n    marginTop: 40,\n    marginBottom: 60,\n  },\n  link: {\n    textDecoration: \"none\",\n  },\n  card: {\n    border: \"none\",\n    boxShadow: \"none\",\n  },\n  heading: {\n    fontWeight: \"bold\",\n    marginBottom: 15,\n  },\n  media: {\n    height: 225,\n  },\n  gallery: {\n    overflowX: \"scroll\",\n  },\n  title: {\n    fontWeight: \"bold\",\n  },\n  releaseDate: {\n    color: \"#00000099\",\n  },\n});\n\nexport default function UpcomingMovies() {\n  const [upcomingMovies, setUpcomingMovies] = useState(\"\");\n  const classes = useStyles();\n  let dateObj = new Date();\n  let month = dateObj.getUTCMonth() + 1;\n  let day = dateObj.getUTCDate();\n  let year = dateObj.getUTCFullYear();\n  if (month < 10) {\n    month = \"0\" + String(month);\n  } else {\n    month = String(month);\n  }\n  if (day < 10) {\n    day = \"0\" + String(day + 1);\n  } else {\n    day = String(day + 1);\n  }\n  let upcomingDate = String(year) + \"-\" + month + \"-\" + day;\n\n  useEffect(() => {\n    axios\n      .get(\n        `https://api.themoviedb.org/3/discover/movie?api_key=84740a476602b16276f7d9e1093ff572&language=en-US&sort_by=primary_release_date.asc&include_adult=false&include_video=false&page=1&primary_release_date.gte=2021-01-01&sort_by=popularity.desc`\n      )\n      .then((res) => {\n        setUpcomingMovies(res.data.results);\n      });\n    return () => {\n      window.location.reload();\n    };\n  }, []);\n\n  const showMovies = () => {\n    if (upcomingMovies) {\n      return upcomingMovies.map((movie) => (\n        <Grid key={movie.id} item>\n          <Link\n            className={classes.link}\n            to={{\n              pathname: `/movie/${movie.id}`,\n            }}\n          >\n            <Card className={classes.card}>\n              <CardActionArea>\n                <Box height={225} width={150}>\n                  <img\n                    className={classes.media}\n                    src={\n                      \"https://image.tmdb.org/t/p/original\" + movie.poster_path\n                    }\n                    alt={movie.title}\n                  ></img>\n                </Box>\n\n                <CardContent>\n                  <Typography className={classes.title}>\n                    {movie.title}\n                  </Typography>\n                  <Typography className={classes.releaseDate}>\n                    {movie.release_date}\n                  </Typography>\n                </CardContent>\n              </CardActionArea>\n            </Card>\n          </Link>\n        </Grid>\n      ));\n    }\n  };\n\n  return (\n    <Box className={classes.root} paddingX={33}>\n      <Typography className={classes.heading} variant=\"h5\">\n        Upcoming Movies\n      </Typography>\n      <Grid container spacing={3} className={classes.gallery} wrap=\"nowrap\">\n        {showMovies()}\n      </Grid>\n    </Box>\n  );\n}","/Users/chutchawin/Desktop/Project/web-app/src/components/Footer.js",[],"/Users/chutchawin/Desktop/Project/web-app/src/pages/Home.js",[],"/Users/chutchawin/Desktop/Project/web-app/src/pages/PosterInfo.js",["61","62","63","64","65","66"],"import React, { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useParams } from \"react-router\";\nimport {\n  Box,\n  Grid,\n  makeStyles,\n  Typography,\n  Card,\n  CardActionArea,\n  CardContent,\n  Button,\n  Divider,\n} from \"@material-ui/core/\";\nimport Footer from \"../components/Footer\";\nimport axios from \"axios\";\nimport NavBar from \"../components/NavBar\";\nimport Star from \"@material-ui/icons/Star\";\nimport ArrowRight from \"@material-ui/icons/ArrowRight\";\nimport t from \"typy\";\n\nconst useStyles = makeStyles({\n  wrap: {\n    marginTop: 110,\n    height: 570,\n    position: \"relative\",\n  },\n  media: {\n    width: \"100%\",\n    height: 570,\n  },\n  backgroundImage: {\n    background:\n      \"linear-gradient(to left, rgba(0, 0, 0, 0.4) , rgba(0, 0, 0, 1) 90%)\",\n    zIndex: 85,\n    position: \"absolute\",\n    top: 0,\n    left: 0,\n    bottom: 0,\n    width: \"100%\",\n    height: \"100%\",\n  },\n  description: {\n    color: \"white\",\n    position: \"absolute\",\n    marginLeft: 520,\n    top: \"15%\",\n    left: 80,\n  },\n  text1: {\n    fontWeight: 100,\n  },\n  title: {\n    fontSize: 35,\n    fontWeight: \"bold\",\n  },\n  image: {\n    marginTop: 30,\n    marginLeft: 264,\n    width: 300,\n    height: 510,\n  },\n  starWrap: {\n    marginTop: 12,\n    marginBottom: 12,\n    position: \"relative\",\n  },\n  star: {},\n  score: {\n    position: \"absolute\",\n    bottom: 8,\n  },\n  userScore: {\n    position: \"absolute\",\n    marginLeft: 50,\n    bottom: 6,\n  },\n  arrowRight: {\n    position: \"absolute\",\n    marginLeft: 150,\n    bottom: 7,\n  },\n  playTrailer: {\n    position: \"absolute\",\n    marginLeft: 180,\n    bottom: 9,\n  },\n  tageLine: {\n    fontSize: 18,\n  },\n  overView: {\n    marginTop: 10,\n    marginBottom: 10,\n    fontSize: 21,\n    fontWeight: \"bold\",\n  },\n  position: {\n    marginTop: 20,\n    color: \"white\",\n  },\n  crewName: {\n    fontWeight: \"bold\",\n  },\n  contentWrap: {\n    marginTop: 20,\n    marginBottom: 40,\n    paddingLeft: 264,\n    paddingRight: 264,\n  },\n  topBilledCast: {\n    fontWeight: \"bold\",\n  },\n  movieInfo: {\n    marginLeft: 45,\n    marginTop: 60,\n  },\n  gallery: {\n    marginTop: 5,\n    overflowX: \"scroll\",\n  },\n  castCard: {\n    width: 138,\n    height: \"100%\",\n  },\n  castPic: {\n    width: \"100%\",\n    height: 175,\n  },\n  castName: {\n    fontSize: \"15.5px\",\n    fontWeight: \"bold\",\n  },\n  castCha: {\n    fontSize: \"13px\",\n  },\n  fullCast: {\n    marginTop: 35,\n  },\n  contentHeader: {\n    fontWeight: \"bold\",\n    marginTop: 35,\n  },\n  statusTitle: {\n    fontWeight: \"bold\",\n    marginTop: 10,\n  },\n  keywords: {\n    marginTop: 10,\n    marginRight: 10,\n  },\n  recMedia: {\n    width: 250,\n    height: 141,\n  },\n  recCard: {\n    width: 250,\n    height: \"100%\",\n    border: \"none\",\n    boxShadow: \"none\",\n  },\n  recTitle: {\n    fontSize: \"14\",\n  },\n  link: {\n    textDecoration: \"none\",\n  },\n});\n\nexport default function PosterInfo() {\n  const classes = useStyles();\n  const { movieId } = useParams();\n  const [info, setInfo] = useState(\"\");\n  const [toggle, setToggle] = useState(true);\n\n  const genres = () => {\n    if (info.genres) {\n      let x = \"\";\n      for (let i = 0; i < info.genres.length; i++) {\n        if (i !== info.genres.length - 1) {\n          x += info.genres[i].name + \",\" + \" \";\n        } else {\n          x += info.genres[i].name;\n        }\n      }\n      return <Typography display=\"inline\">&nbsp;&nbsp;- {x}</Typography>;\n    }\n  };\n\n  const crews = () => {\n    const obj = t(info, \"credits.crew\").safeObject;\n    if (obj) {\n      return obj.map((element, index) => {\n        if (\n          element.job === \"Writer\" ||\n          element.job === \"Director\" ||\n          element.job === \"Creator\"\n        ) {\n          return (\n            <Grid className={classes.position} key={index} item xs={4}>\n              <Typography className={classes.crewName}>\n                {element.name}\n              </Typography>\n              <Typography>{element.job}</Typography>\n            </Grid>\n          );\n        }\n      });\n    }\n  };\n\n  const cast = () => {\n    const castObj = t(info, \"credits.cast\").safeObject;\n    if (castObj) {\n      return castObj.map((element, index) => {\n        if (index < 10) {\n          return (\n            <Grid item key={index}>\n              <Card className={classes.castCard}>\n                <CardActionArea>\n                  <img\n                    className={classes.castPic}\n                    src={\n                      \"https://image.tmdb.org/t/p/original\" +\n                      element.profile_path\n                    }\n                    alt={element.profile_path}\n                  ></img>\n                  <CardContent>\n                    <Typography className={classes.castName}>\n                      {element.name}\n                    </Typography>\n                    <Typography className={classes.castCha}>\n                      {element.character}\n                    </Typography>\n                  </CardContent>\n                </CardActionArea>\n              </Card>\n            </Grid>\n          );\n        }\n      });\n    }\n  };\n\n  const keywordsList = () => {\n    const keywordsObj = t(info, \"keywords.keywords\").safeObject;\n    if (keywordsObj) {\n      return keywordsObj.map((element, index) => {\n        if (index < 5) {\n          return (\n            <Button\n              className={classes.keywords}\n              variant=\"contained\"\n              key={index}\n            >\n              {element.name}\n            </Button>\n          );\n        }\n      });\n    }\n  };\n\n  const handleClick = () => {\n    setToggle(!toggle);\n  };\n\n  const recommendations = () => {\n    const recObj = t(info, \"recommendations.results\").safeObject;\n    if (recObj) {\n      return recObj.map((element, index) => {\n        if (index < 10) {\n          return (\n            <Grid item key={element.id}>\n              <Link\n                className={classes.link}\n                to={{\n                  pathname: `/movie/${element.id}`,\n                }}\n                onClick={() => handleClick()}\n              >\n                <Card className={classes.recCard}>\n                  <CardActionArea>\n                    <img\n                      className={classes.recMedia}\n                      src={\n                        \"https://image.tmdb.org/t/p/original\" +\n                        element.backdrop_path\n                      }\n                      alt={element.poster_path}\n                    ></img>\n                    <CardContent>\n                      <Typography className={classes.recTitle} noWrap=\"true\">\n                        {element.title}\n                      </Typography>\n                    </CardContent>\n                  </CardActionArea>\n                </Card>\n              </Link>\n            </Grid>\n          );\n        }\n      });\n    }\n  };\n\n  window.onbeforeunload = () => {\n    window.scrollTo(0, 0);\n  };\n  \n  useEffect(() => {\n    axios\n      .get(\n        `https://api.themoviedb.org/3/movie/${movieId}?api_key=84740a476602b16276f7d9e1093ff572&append_to_response=videos,credits,keywords,recommendations`\n      )\n      .then((res) => {\n        setInfo(res.data);\n      });\n    return () => {\n      window.location.reload();\n    };\n  }, [toggle]);\n\n  return (\n    <div>\n      <NavBar />\n      <Box className={classes.wrap}>\n        <img\n          className={classes.media}\n          src={\"https://image.tmdb.org/t/p/original\" + info.backdrop_path}\n          alt={info.title}\n        />\n        <Box className={classes.backgroundImage}>\n          <img\n            className={classes.image}\n            src={\"https://image.tmdb.org/t/p/original\" + info.poster_path}\n            alt={info.title}\n          />\n          <Box className={classes.description}>\n            <Typography className={classes.title}>{info.title}</Typography>\n            <Typography display=\"inline\">{info.release_date} (US)</Typography>\n            {genres()}\n            <Typography display=\"inline\">\n              &nbsp;&nbsp;- {info.runtime} mins\n            </Typography>\n            <Box className={classes.starWrap}>\n              <Star\n                className={classes.star}\n                color=\"secondary\"\n                style={{ fontSize: 50 }}\n              />\n              <Typography\n                className={classes.score}\n                component=\"span\"\n                variant=\"h5\"\n              >\n                &nbsp;{info.vote_average}\n              </Typography>\n              <Typography\n                className={classes.userScore}\n                component=\"span\"\n                variant=\"h6\"\n              >\n                User Score\n              </Typography>\n              <ArrowRight\n                className={classes.arrowRight}\n                style={{ fontSize: 30 }}\n              />\n              <Typography className={classes.playTrailer} component=\"span\">\n                Play Trailer\n              </Typography>\n            </Box>\n            <Typography className={classes.tageLine}>{info.tagline}</Typography>\n            <Typography className={classes.overView}>Overview</Typography>\n            <Typography>{info.overview}</Typography>\n            <Grid container>{crews()}</Grid>\n          </Box>\n        </Box>\n        <Box className={classes.contentWrap}>\n          <Grid container>\n            <Grid item container xs={9}>\n              <Typography className={classes.topBilledCast} variant=\"h6\">\n                Top Billed Cast\n              </Typography>\n              <Grid\n                item\n                container\n                spacing={4}\n                className={classes.gallery}\n                wrap=\"nowrap\"\n              >\n                {cast()}\n              </Grid>\n            </Grid>\n            <Grid item xs={3}>\n              <Box className={classes.movieInfo}>\n                <Typography className={classes.statusTitle}>Status</Typography>\n                <Typography>{info.status}</Typography>\n                <Typography className={classes.statusTitle}>\n                  Original Language\n                </Typography>\n                <Typography>{info.original_language}</Typography>\n                <Typography className={classes.statusTitle}>\n                  Keywords\n                </Typography>\n                {keywordsList()}\n              </Box>\n            </Grid>\n            <Grid item xs={9}>\n              <Typography className={classes.fullCast}>Full Cast</Typography>\n              <br />\n              <Divider />\n            </Grid>\n            <Grid item xs={3}></Grid>\n            <Grid item xs={9}>\n              <Typography className={classes.contentHeader} variant=\"h6\">\n                Social\n              </Typography>\n              <br />\n              <Divider />\n            </Grid>\n            <Grid item xs={3}></Grid>\n            {/* <Grid item xs={9}>\n              <Typography className={classes.contentHeader} variant=\"h6\">\n                Media\n              </Typography>\n              <br />\n              <Divider />\n            </Grid>\n            <Grid item xs={3}></Grid>\n            <Grid item xs={9}>\n              <Typography className={classes.contentHeader} variant=\"h6\">\n                Recommendations\n              </Typography>\n            </Grid>\n            <Grid item xs={3}></Grid> */}\n            <Grid item xs={9}>\n              <Typography className={classes.contentHeader} variant=\"h6\">\n                Recommendations\n              </Typography>          \n            </Grid>\n            <Grid item xs={3}></Grid>\n            <Grid\n              item\n              container\n              spacing={3}\n              className={classes.gallery}\n              wrap=\"nowrap\"\n              xs={9}\n            >\n              {recommendations()}\n            </Grid>\n            <Grid item xs={3}></Grid>\n          </Grid>\n        </Box>\n        <Footer />\n      </Box>\n    </div>\n  );\n}\n","/Users/chutchawin/Desktop/Project/web-app/src/pages/Results.js",["67","68"],{"ruleId":"69","replacedBy":"70"},{"ruleId":"71","replacedBy":"72"},{"ruleId":"73","severity":1,"message":"74","line":14,"column":8,"nodeType":"75","messageId":"76","endLine":14,"endColumn":15},{"ruleId":"69","replacedBy":"77"},{"ruleId":"71","replacedBy":"78"},{"ruleId":"73","severity":1,"message":"79","line":61,"column":7,"nodeType":"75","messageId":"76","endLine":61,"endColumn":19},{"ruleId":"80","severity":1,"message":"81","line":180,"column":42,"nodeType":"82","messageId":"83","endLine":180,"endColumn":43},{"ruleId":"84","severity":1,"message":"85","line":192,"column":39,"nodeType":"86","messageId":"87","endLine":192,"endColumn":41},{"ruleId":"84","severity":1,"message":"85","line":214,"column":43,"nodeType":"86","messageId":"87","endLine":214,"endColumn":45},{"ruleId":"84","severity":1,"message":"85","line":248,"column":47,"nodeType":"86","messageId":"87","endLine":248,"endColumn":49},{"ruleId":"84","severity":1,"message":"85","line":271,"column":42,"nodeType":"86","messageId":"87","endLine":271,"endColumn":44},{"ruleId":"88","severity":1,"message":"89","line":322,"column":6,"nodeType":"90","endLine":322,"endColumn":14,"suggestions":"91"},{"ruleId":"73","severity":1,"message":"92","line":11,"column":3,"nodeType":"75","messageId":"76","endLine":11,"endColumn":14},{"ruleId":"88","severity":1,"message":"93","line":61,"column":6,"nodeType":"90","endLine":61,"endColumn":8,"suggestions":"94"},"no-native-reassign",["95"],"no-negated-in-lhs",["96"],"no-unused-vars","'Results' is defined but never used.","Identifier","unusedVar",["95"],["96"],"'upcomingDate' is assigned a value but never used.","no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'movieId'. Either include it or remove the dependency array.","ArrayExpression",["97"],"'CardContent' is defined but never used.","React Hook useEffect has a missing dependency: 'location.state.search'. Either include it or remove the dependency array.",["98"],"no-global-assign","no-unsafe-negation",{"desc":"99","fix":"100"},{"desc":"101","fix":"102"},"Update the dependencies array to be: [movieId, toggle]",{"range":"103","text":"104"},"Update the dependencies array to be: [location.state.search]",{"range":"105","text":"106"},[7178,7186],"[movieId, toggle]",[1198,1200],"[location.state.search]"]